name: Build and Push Docker Image
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Test with Gradle # test application build
        run: ./gradlew test
        
      - name: Build with Gradle
        run: ./gradlew build -x test
        
      - name: Temporarily save build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: build
          retention-days: 1
        
  docker:
      name: Deploy Docker Image
      runs-on: ubuntu-lastest
      needs: build
      
      steps:
        - uses: actions/checkout@v2
        - name: Retrieve built
          uses: actions/download-artifact@v2
          with:
            name: build-artifact
            path: build
            
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-northeast-2

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: dsm-chart-backend
            IMAGE_TAG: latest
          run: |
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
              echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

        - name: Get current time
          uses: 1466587594/get-current-time@v2
          id: current-time
          with:
            format: YYYYMMDD_HH-mm-ss
            utcOffset: "+09:00"

        - name: Generate deployment package
          run: |
            mkdir -p deploy
            cp Dockerrun.aws.json deploy/Dockerrun.aws.json
            cd deploy && zip -r deploy.zip .

        - name: Beanstalk Deploy
          uses: einaregilsson/beanstalk-deploy@v14
          with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            application_name: dsm-chart-backend
            environment_name: Dsmchartbackend-env
            version_label: earth-docker-${{steps.current-time.outputs.formattedTime}}
            region: ap-northeast-2
            deployment_package: deploy/deploy.zip
            wait_for_environment_recovery: 200
